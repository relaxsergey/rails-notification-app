<script src='https://www.gstatic.com/firebasejs/5.7.0/firebase-app.js'></script>
<script src='https://www.gstatic.com/firebasejs/5.7.0/firebase-messaging.js'></script>
<script>
var config = {
  apiKey: "<%= ENV['API_KEY'] %>",
  authDomain: "<%= ENV['AUTH_DOMAIN'] %>",
  databaseURL: 'https://testpushapp-cf538.firebaseio.com',
  projectId: "<%= ENV['PROJECT_ID'] %>",
  storageBucket: "<%= ENV['STORAGE_BUCKET'] %>",
  messagingSenderId: "<%= ENV['FCM_ID'] %>"
};
firebase.initializeApp(config);
const messaging = firebase.messaging();
messaging.usePublicVapidKey("<%= ENV['VAPID_PUBLIC_KEY'] %>");

messaging.onTokenRefresh(function() {
  messaging.getToken().then(function(refreshedToken) {
    // console.log('Token refreshed.');
    setTokenSentToServer(false);
    sendTokenToServer(refreshedToken);
    resetUI();
  }).catch(function(err) {
    // console.log('Unable to retrieve refreshed token ', err);
  });
});

function resetUI() {
  messaging.getToken().then(function(currentToken) {
    if (currentToken) {
      sendTokenToServer(currentToken);
    } else {
      // console.log('No Instance ID token available. Request permission to generate one.');
      setTokenSentToServer(false);
    }
  }).catch(function(err) {
    // console.log('An error occurred while retrieving token. ', err);
    setTokenSentToServer(false);
  });
}

function sendTokenToServer(currentToken) {
  if (!isTokenSentToServer()) {
    // console.log('Sending token to server...');
    $.post("/subscribe", { subscription: currentToken });
    setTokenSentToServer(true);
  } else {
    // console.log('Token already sent to server so won\'t send it again ' +
        // 'unless it changes');
  }
}

function isTokenSentToServer() {
  return window.localStorage.getItem('sentToServer') === '1';
}

function setTokenSentToServer(sent) {
  window.localStorage.setItem('sentToServer', sent ? '1' : '0');
}

function requestPermission() {
  // console.log('Requesting permission...');
  messaging.requestPermission().then(function() {
    // console.log('Notification permission granted.');
    // TODO(developer): Retrieve an Instance ID token for use with FCM.
    // [START_EXCLUDE]
    // In many cases once an app has been granted notification permission, it
    // should update its UI reflecting this.
    resetUI();
  }).catch(function(err) {
    // console.log('Unable to get permission to notify.', err);
  });
}

resetUI();

</script>
